/*base part start */

ul {
    list-style: none;
}

* {
    padding: 0px;
    margin: 0px;
}


/*base part end */

// 其实 不垂直 居中
ul.ex01 {
    border: 1px solid orange;
    li {
        width: 80%;
        /*height: 50px;*/
        background: #efefef;
        margin: 15px;
        padding: 10px;
        .icon {
            display: inline-block;
            width: 20px;
            height: 28px;
            background-color: red; // background: url(/i_01.png) no-repeat center;
            vertical-align: middle;
        }
        .text {
            font-size: 14px;
            /*ps:此处的 line-height 跟着父元素的 height一致*/
            /*line-height: 50px; */
        }
        img {
            vertical-align: middle;
            display: inline-block;
        }
    }
}

//  这个例子 对比 01 注意 小的方形是居中的
//  1. 可以备注 .text 中的 vertical-align: middle;  试试  display: inline-block;(加不加 无所谓)
//  2. vertical-align: middle 生效的条件 a. 父组件 不设置 高度，子组件 才可以居中 b.当父组件中设置了height，那么子组件的 line-height = 父组件的height
ul.ex02 {
    border: 1px solid orange;
    li {
        width: 80%;
        /*height: 50px;*/
        background: #efefef;
        margin: 15px;
        padding: 10px;
        .icon {
            display: inline-block;
            width: 5px;
            height: 5px;
            background-color: red;
            /*background: url(../i_01.png) no-repeat center;*/
            vertical-align: middle;
        }
        .text {
            font-size: 14px;
            vertical-align: middle;

            /*ps:此处的 line-height 跟着父元素的 height一致*/
            /*line-height: 50px; */
        }
        img {
            vertical-align: middle;
            display: inline-block;
        }
    }
}








/*
总结：
1.父元素 尽量不要设置 高度 ，通过  padding 来达到固定的值
2.若父元素  设置了 height = 100 ，那么 需要对齐的 icon 设置 vertical-align :middile + line-height = 父元素的高度(不是100%，而是100px);
*/

ul.ex03 {
    border: 1px solid orange;
    li {
        width: 80%;
        /*height: 50px;*/
        background: #efefef;
        margin: 15px;
        padding: 10px;
        .icon {
            display: inline-block;
            width: 20px;
            height: 28px;
            background-color: red; // background: url(../i_01.png) no-repeat center;
            vertical-align: middle;
        }
        .text {
            font-size: 14px;
            /*ps:此处的 line-height 跟着父元素的 height一致*/
            /*line-height: 50px; */
        }
        img {
            vertical-align: middle;
            display: inline-block;
        }
    }
}

//   table-cell 方式居中  问题：width 被撑开
//   总结：父组件 display= table  子组件display: table-cell; 并设置 text-align：center 和 vertical-align:middle 实现居中对齐
ul.ex04 {
    border: 1px solid orange;
    li {
        width: 80%;
        height: 300px;
        background: #efefef;
        margin: 15px;
        padding: 10px;
        display: table;
        /*width: 100%;*/
        div {
            // 里面其实是 按照 3 ：5 的比例分配的（30%：50%   100px：200px/  100px:50% => 1:1(以百分比为主)）
            &:nth-child(1) {
                width: 100px;
            }
            &:nth-child(2) {
                width: 50%;
            } // background: #666; //在html 中已经添加
            /*width: 50px !important;*/
            display: table-cell;
            text-align: center;
            vertical-align: middle;

            .icon {
                display: inline-block;
                width: 20px;
                height: 28px;
                background-color: red; // background: url(../i_01.png) no-repeat center;
                vertical-align: middle;
            }
            .text {
                font-size: 14px;
                /*ps:此处的 line-height 跟着父元素的 height一致*/
                /*line-height: 50px; */
            }
            img {
                vertical-align: middle;
                display: inline-block;
            }
        }
    }
}


// 绝对定位的方式 实现 ps:固定 宽高 ，水平 垂直 居中 问题：定宽高
// 1.父组件 postion:relative  子组件 postion:absolute  left top left right = 0  margin 0 即可
ul.ex05 {
    border: 1px solid orange;
    li {
        width: 80%;
        height: 300px;
        background: #efefef;
        margin: 15px;
        padding: 10px;
        position: relative;
        div {
            background: #666;
            width: 200px;
            height: 150px;
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            margin: auto;
            /* 有了这个就自动居中了 */
            .icon {
                display: inline-block;
                width: 20px;
                height: 28px;
                background-color: red; // background: url(../i_01.png) no-repeat center;
                vertical-align: middle;
            }
            .text {
                font-size: 14px;
                line-height: 150px;
            }
            img {
                vertical-align: middle;
                display: inline-block;
            }
        }
    }
}

// Flexbox 居中 不定 宽高
// 1.注意 div 可以 给 宽度 也可以不给宽度 width 与 height 随便，都可以实现 水平垂直居中
ul.ex06 {
    border: 1px solid orange;
    li {
        width: 80%;
        height: 300px;
        background: #efefef;
        margin: 15px;
        padding: 10px;
        display: flex;
        justify-content:center; //水平居中
        align-items:center;     // 垂直居中
        div {
            background: #666;
            width: 200px;
            height: 150px;
            /* 有了这个就自动居中了 */
            .icon {
                display: inline-block;
                width: 20px;
                height: 28px;
                background-color: red; // background: url(../i_01.png) no-repeat center;
                vertical-align: middle;
            }
            .text {
                font-size: 14px;
                line-height: 150px;
            }
            img {
                vertical-align: middle;
                display: inline-block;
            }
        }
    }
}